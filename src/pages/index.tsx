import clsx from 'clsx';
import utcToZonedTime from 'date-fns-tz/utcToZonedTime';
import intlFormat from 'date-fns/intlFormat';
import type { NextPage } from 'next';
import Head from 'next/head';
import { forwardRef, HTMLProps, useEffect, useState } from 'react';
import { TimeScroller } from '../components/time-scroller';

const intlFormatToUse = {
    hour: 'numeric',
    minute: 'numeric',
} as const;

const useCurrentTime = () => {
    const [currentTime, setCurrentTime] = useState(new Date());
    useEffect(() => {
        const timer = setInterval(() => {
            setCurrentTime(new Date());
        }, 1000);
        return () => clearInterval(timer);
    }, []);
    return currentTime;
};

const useTimeInZone = () => {
    const currentTime = useCurrentTime();

    return utcToZonedTime(currentTime, 'America/Los_Angeles');
};

const Time = ({ date }: { date: Date }) => (
    <div>
        {intlFormat(date, {
            ...intlFormatToUse,
        })}
    </div>
);

const TimeAwareBg = forwardRef<
    HTMLDivElement,
    HTMLProps<HTMLDivElement> & {
        date: Date;
    }
>(function TimeAwareBgInner(props, forwardedRef) {
    const isMorning = props.date.getHours() < 12;

    return (
        <div
            {...props}
            className={clsx(
                'bg-gradient-radial to-slate-500/0',
                {
                    'from-orange-800/20': isMorning,
                    'from-blue-800/20': !isMorning,
                },
                props.className
            )}
            ref={forwardedRef}
        ></div>
    );
});

const Home: NextPage = () => {
    const currentTime = useCurrentTime();
    const timeInLa = useTimeInZone();

    return (
        <>
            <Head>
                <title>Time</title>
                <meta name="description" content="Generated by create-t3-app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <div className="h-screen grid place-items-center">
                <div className="big-shadow w-[90%] h-[90%] relative overflow-hidden md:w-[600px] md:h-[400px] border bg-[#000]/60 border-[#C9C9C9]/30 rounded-3xl shadow-2xl flex flex-col justify-center">
                    <div className="mx-auto my-6 text-xl">
                        <TimeScroller currentHour={currentTime.getHours()} />
                        {/* <Time date={currentTime} /> */}
                    </div>
                    <div className="border-t-[#C9C9C9]/30 w-[80%] border-t mx-auto"></div>
                    <div className="mx-auto my-6 text-xl">
                        {/* <Time date={timeInLa} /> */}
                        <TimeScroller currentHour={timeInLa.getHours()} />
                        {/* <div className="ml-2">PST</div> */}
                    </div>
                    <TimeAwareBg
                        date={currentTime}
                        className="absolute -top-[25%] h-1/3 w-full blur-2xl"
                    />
                    <TimeAwareBg
                        date={timeInLa}
                        className="absolute bottom-[-25%] h-1/3 w-full blur-2xl"
                    />
                </div>
            </div>
        </>
    );
};

export default Home;
